name: Report a bug in jira

on:
  workflow_dispatch:
    inputs:
      description:
        required: true
        type: string
      short_title:
        required: true
        type: string
      project:
        required: true
        type: string
      port_context:
        required: true
        type: string
      customer_name:
        required: true
        type: string
      customer_engineer:
        required: true
        type: string

jobs:
  create_jira_issue:
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

      - name: Inform searching of user in user list
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_context).run_id }}
          logMessage: |
            Searching for user in organization user list... ⛴️

      - name: Install jq
        run: sudo apt-get install jq

      - name: Inform retrieval of Jira Assignee ID
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_context).run_id }}
          logMessage: |
            Retrieving Assignee ID from Jira.. ⛴️

      - name: Get assignee user ID
        id: get-assignee
        run: |
          jira_auth="${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}"
          assignee_email=$(echo '${{inputs.customer_engineer}}' | jq -r '.identifier')
          echo "assignee email is: $assignee_email"
          response=$(curl -s -u "$jira_auth" -G \
            --data-urlencode "query=$assignee_email" \
            "https://port-csm.atlassian.net/rest/api/3/user/search")

          echo "response is: $response"
          # Extract the user's ID from the response using jq
          user_id=$(echo "$response" | jq -r '.[0].accountId')
          echo "user_id is: $user_id"
          echo "ASSIGNEE_USER_ID=$user_id" >> $GITHUB_OUTPUT

      - name: Inform retrieval of Jira Reporter ID
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_context).run_id }}
          logMessage: |
            Retrieving Reporter ID from Jira.. ⛴️
          
      - name: Get reporter user ID
        id: get-reporter
        run: |
          jira_auth="${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}"
          reporter_email="${{ fromJson(inputs.port_context).triggered_by }}"
          response=$(curl -s -u "$jira_auth" -G \
            --data-urlencode "query=$reporter_email" \
            "https://port-csm.atlassian.net/rest/api/3/user/search")

          # Extract the user's ID from the response using jq
          user_id=$(echo "$response" | jq -r '.[0].accountId')
          echo "REPORTER_USER_ID=$user_id" >> $GITHUB_OUTPUT

      - name: Inform retrieval of Jira Reporter ID
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_context).run_id }}
          logMessage: |
            Creating a new Jira issue.. ⛴️

      - name: Build Jira fields object
        id: build-jira-fields
        run: |
          raw_name="${{inputs.customer_name}}"
          sanitized_name="${raw_name// /-}"

          fields="{
            \"labels\": [\"$sanitized_name\"],
            \"assignee\": {\"id\": \"${{ steps.get-assignee.outputs.ASSIGNEE_USER_ID }}\"},
            \"reporter\": {\"id\": \"${{ steps.get-reporter.outputs.REPORTER_USER_ID }}\"}
          }"
          echo "$fields"
          echo "JIRA_FIELDS=$(echo $fields)" >> $GITHUB_OUTPUT

      - name: Create Jira issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: ${{inputs.project}}
          issuetype: Task
          summary: ${{inputs.short_title}}
          description: |
            ${{inputs.description}}
          fields: ${{ steps.build-jira-fields.outputs.JIRA_FIELDS }}

      - name: Inform creation of Jira issue
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          link: ${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create.outputs.issue }}
          runId: ${{ fromJson(inputs.port_context).run_id }}
          logMessage: |
            Jira issue with ID ${{ steps.create.outputs.issue }} created! ✅